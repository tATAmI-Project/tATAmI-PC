(agent AmILabServer ?client1 ?client2 ?client3
	(behavior
	
		// add all the clients to kb
		(initial register
		
			// add all clients with a default proximity
			(addK (struct knowledge client ?client1 999999))
			(addK (struct knowledge client ?client2 999999))
			(addK (struct knowledge client ?client3 999999))
		)
		
		// send requests for proximity to all clients
		(reactive request
		
			// something tells the server to send requests
			(input request)
			(forAllK (struct knowledge client ?client ?proximity)
				(send ?client (struct message request))
			)
		)
		
		// update the proximity of a client and update all the clients about their new status
		(reactive update
			
			// a client sent his proximiy
			(receive (struct message ?client ?newProximity))
			
			// update his proximity in the kb
			(removeK (struct knowledge client ?client ?proximity))
			(addK (struct knowledge client ?client ?newProximity))
			
			// determine the closest client and remove him from the kb
			(readK (struct knowledge client ??closestClient ??smallestProximity))
			(forAllK (struct knowledge client ?client ?proximity)
				(bestClient ?client ?proximity ??closestClient ??smallestProximity))
			(removeK (struct knowledge client ??closestClient ??smallestProximity))
			
			// tell the closest client the good news
			(send ??closescClient (struct message confirm))
			
			// tell all the other clients the bad news
			(forAllK (struct knowledge client ?client ?proximity)
				(send ?client (struct message decline))
			)
			
			// add back the closest client to the kb
			(addK (struct knowledge client ??closestClient ??smallestProximity))
		)
	)
)